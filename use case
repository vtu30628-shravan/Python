{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyP0OxzQC94VMEU/ZtnecoIe",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/vtu30628-shravan/Python/blob/main/use%20case\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 452
        },
        "id": "JKHG2seaGLqy",
        "outputId": "183b5663-17b0-44f3-d75d-e1291a630b29"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "outcomes = [\"Heads\", \"Tails\"]\n",
        "probabilities = [0.5, 0.5]\n",
        "\n",
        "plt.bar(outcomes, probabilities, color='yellow', edgecolor='black')\n",
        "plt.title(\"Probability Distribution of a Coin Toss\")\n",
        "plt.ylabel(\"Probability\")\n",
        "\n",
        "# Properly indented loop\n",
        "for i, prob in enumerate(probabilities):\n",
        "    plt.text(i, prob + 0.02, str(prob), ha='center')\n",
        "\n",
        "plt.show()"
      ]
    }
  ]
}